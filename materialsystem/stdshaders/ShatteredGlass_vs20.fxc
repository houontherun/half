//	STATIC: "FOG_TYPE"				"0..1"
//	STATIC: "ENVMAP_MASK"			"0..1"
//  STATIC: "AACLAMP" "0..1"
#include "common_vs_fxc.h"

static const int g_FogType					= FOG_TYPE;
static const bool g_UseSeparateEnvmapMask	= ENVMAP_MASK;

const float4 cBaseTexCoordTransform[2]			:  register( c90 );
const float4 cDetailTexCoordTransform[2]		:  register( c92 );
const float4 cEnvmapMaskTexCoordTransform[2]	:  register( c94 );

struct VS_INPUT
{
	float3 vPos							: POSITION;
	float3 vNormal						: NORMAL;
	float2 vBaseTexCoord				: TEXCOORD0;
	float2 vLightmapTexCoord			: TEXCOORD1;
	float2 vDetailTexCoord				: TEXCOORD2;
#if (AACLAMP==1)
	float4 vLightmapSize_Offset   : TEXCOORD3;
#endif
};

struct VS_OUTPUT
{
    float4 projPos					: POSITION;	
	float  fog						: FOG;
	float2 baseTexCoord				: TEXCOORD0;
	float2 detailTexCoord			: TEXCOORD1;
	float2 lightmapTexCoord			: TEXCOORD2;
	float2 envmapMaskTexCoord		: TEXCOORD3;
	float3 eyeVector				: TEXCOORD4;
	float3 worldNormal				: TEXCOORD5;
#if (AACLAMP==1)
	float4 lightmapSize_Offset : TEXCOORD6;
#endif
	float4 vertexColor				: COLOR;
};

VS_OUTPUT main( const VS_INPUT v )
{
	VS_OUTPUT o = ( VS_OUTPUT )0;

	float4 projPos;
	float3 worldPos;

	projPos = mul( float4( v.vPos, 1 ), cModelViewProj );
	o.projPos = projPos;

	worldPos = mul( float4( v.vPos, 1 ), cModel[0] );

	o.worldNormal = mul( v.vNormal, ( float3x3 )cModel[0] );
	o.eyeVector = cEyePos - worldPos;
	o.baseTexCoord.x = dot( v.vBaseTexCoord, cBaseTexCoordTransform[0] );
	o.baseTexCoord.y = dot( v.vBaseTexCoord, cBaseTexCoordTransform[1] );
	o.detailTexCoord.x = dot( v.vDetailTexCoord, cDetailTexCoordTransform[0] );
	o.detailTexCoord.y = dot( v.vDetailTexCoord, cDetailTexCoordTransform[1] );
	o.lightmapTexCoord = v.vLightmapTexCoord;

#if (AACLAMP==1)
	o.lightmapSize_Offset = v.vLightmapSize_Offset;
#endif

	if( g_UseSeparateEnvmapMask )
	{
		o.envmapMaskTexCoord.x = dot( v.vBaseTexCoord, cEnvmapMaskTexCoordTransform[0] );
		o.envmapMaskTexCoord.y = dot( v.vBaseTexCoord, cEnvmapMaskTexCoordTransform[1] );
	}
	o.fog = CalcFog( worldPos, projPos, g_FogType );

	o.vertexColor = cModulationColor;

	return o;
}


